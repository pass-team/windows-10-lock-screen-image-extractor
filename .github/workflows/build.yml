name: build

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - master
      - develop
      - feature/**
      - dependabot/**

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: ['12']
        os: [windows-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Setup environment with node ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}
#      - name: Load npm cache
#        id: check-npm-cache
#        uses: actions/cache@v1
#        with:
#          path: ~\AppData\Roaming\npm-cache
#          key: ${{ runner.os }}-node-${{ hashFiles('**\package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-
      - name: Install yarn
        run: npm install -g yarn
      - name: Load yarn cache
        id: check-yarn-cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        if: steps.check-yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Run linting
        run: |
          yarn run lint:scripts
      - name: Mock assets for testing
        run: |
          (robocopy ./tests/mock-assets/ %userprofile%\AppData\Local\Packages\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\LocalState\Assets\ /v) ^& IF %ERRORLEVEL% LEQ 4 exit /B 0
        shell: cmd
      - name: Run unit tests with coverage
        run: |
          yarn run test:unit:coverage --token=${{secrets.CODACY_PROJECT_API_TOKEN}}
        shell: cmd
      - name: Export code coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage
      - name: Deploying code coverage to Surge
        if: github.ref == 'refs/heads/develop'
        run: |
          npm install -g surge && surge coverage/lcov-report/ code-coverage.surge.sh --token=${{ secrets.SURGE_TOKEN }}
        shell: cmd
      - name: Build exe file
        run: yarn run build:win
        shell: cmd
      - name: Export build file
        uses: actions/upload-artifact@v1
        with:
          name: build-file
          path: build/get-lock-screen.exe
      - name: Run integration tests
        run: yarn run test:integration
        shell: cmd
